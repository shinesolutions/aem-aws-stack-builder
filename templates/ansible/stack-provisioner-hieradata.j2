author_publish_dispatcher::enable_deploy_on_init: {{ aem.enable_deploy_on_init }}

author::enable_deploy_on_init: {{ aem.enable_deploy_on_init }}

author_primary::scheduled_jobs::enable::offline_compaction: {{ scheduled_jobs.author_primary.offline_compaction.enable }}
author_primary::scheduled_jobs::weekday::offline_compaction: "{{ scheduled_jobs.author_primary.offline_compaction.weekday }}"
author_primary::scheduled_jobs::hour::offline_compaction: "{{ scheduled_jobs.author_primary.offline_compaction.hour }}"
author_primary::scheduled_jobs::minute::offline_compaction: "{{ scheduled_jobs.author_primary.offline_compaction.minute }}"
author_primary::scheduled_jobs::enable::export: {{ scheduled_jobs.author_primary.export.enable }}
author_primary::scheduled_jobs::weekday::export: "{{ scheduled_jobs.author_primary.export.weekday }}"
author_primary::scheduled_jobs::hour::export: "{{ scheduled_jobs.author_primary.export.hour }}"
author_primary::scheduled_jobs::minute::export: "{{ scheduled_jobs.author_primary.export.minute }}"
author_primary::scheduled_jobs::enable::live_snapshot: {{ scheduled_jobs.author_primary.live_snapshot.enable }}
author_primary::scheduled_jobs::weekday::live_snapshot: "{{ scheduled_jobs.author_primary.live_snapshot.weekday }}"
author_primary::scheduled_jobs::hour::live_snapshot: "{{ scheduled_jobs.author_primary.live_snapshot.hour }}"
author_primary::scheduled_jobs::minute::live_snapshot: "{{ scheduled_jobs.author_primary.live_snapshot.minute }}"

publish::scheduled_jobs::enable::offline_compaction: {{ scheduled_jobs.publish.offline_compaction.enable }}
publish::scheduled_jobs::weekday::offline_compaction: "{{ scheduled_jobs.publish.offline_compaction.weekday }}"
publish::scheduled_jobs::hour::offline_compaction: "{{ scheduled_jobs.publish.offline_compaction.hour }}"
publish::scheduled_jobs::minute::offline_compaction: "{{ scheduled_jobs.publish.offline_compaction.minute }}"
publish::scheduled_jobs::enable::export: {{ scheduled_jobs.publish.export.enable }}
publish::scheduled_jobs::weekday::export: "{{ scheduled_jobs.publish.export.weekday }}"
publish::scheduled_jobs::hour::export: "{{ scheduled_jobs.publish.export.hour }}"
publish::scheduled_jobs::minute::export: "{{ scheduled_jobs.publish.export.minute }}"
publish::scheduled_jobs::enable::live_snapshot: {{ scheduled_jobs.publish.live_snapshot.enable }}
publish::scheduled_jobs::weekday::live_snapshot: "{{ scheduled_jobs.publish.live_snapshot.weekday }}"
publish::scheduled_jobs::hour::live_snapshot: "{{ scheduled_jobs.publish.live_snapshot.hour }}"
publish::scheduled_jobs::minute::live_snapshot: "{{ scheduled_jobs.publish.live_snapshot.minute }}"

author_standby::scheduled_jobs::enable::live_snapshot: {{ scheduled_jobs.author_standby.live_snapshot.enable }}
author_standby::scheduled_jobs::weekday::live_snapshot: "{{ scheduled_jobs.author_standby.live_snapshot.weekday }}"
author_standby::scheduled_jobs::hour::live_snapshot: "{{ scheduled_jobs.author_standby.live_snapshot.hour }}"
author_standby::scheduled_jobs::minute::live_snapshot: "{{ scheduled_jobs.author_standby.live_snapshot.minute }}"

aem_orchestrator::scheduled_jobs::enable::offline_compaction_snapshot: {{ scheduled_jobs.aem_orchestrator.offline_compaction_snapshot.enable }}
aem_orchestrator::scheduled_jobs::weekday::offline_compaction_snapshot: "{{ scheduled_jobs.aem_orchestrator.offline_compaction_snapshot.weekday }}"
aem_orchestrator::scheduled_jobs::hour::offline_compaction_snapshot: "{{ scheduled_jobs.aem_orchestrator.offline_compaction_snapshot.hour }}"
aem_orchestrator::scheduled_jobs::minute::offline_compaction_snapshot: "{{ scheduled_jobs.aem_orchestrator.offline_compaction_snapshot.minute }}"
aem_orchestrator::scheduled_jobs::enable::offline_snapshot: {{ scheduled_jobs.aem_orchestrator.offline_snapshot.enable }}
aem_orchestrator::scheduled_jobs::weekday::offline_snapshot: "{{ scheduled_jobs.aem_orchestrator.offline_snapshot.weekday }}"
aem_orchestrator::scheduled_jobs::hour::offline_snapshot: "{{ scheduled_jobs.aem_orchestrator.offline_snapshot.hour }}"
aem_orchestrator::scheduled_jobs::minute::offline_snapshot: "{{ scheduled_jobs.aem_orchestrator.offline_snapshot.minute }}"
aem_orchestrator::scheduled_jobs::weekday::cloudwatch_s3_stream: "{{ scheduled_jobs.aem_orchestrator.cloudwatch_s3_stream.weekday }}"
aem_orchestrator::scheduled_jobs::hour::cloudwatch_s3_stream: "{{ scheduled_jobs.aem_orchestrator.cloudwatch_s3_stream.hour }}"
aem_orchestrator::scheduled_jobs::minute::cloudwatch_s3_stream: "{{ scheduled_jobs.aem_orchestrator.cloudwatch_s3_stream.minute }}"

publish_dispatcher::scheduled_jobs::enable::content_health_check: {{ scheduled_jobs.publish_dispatcher.content_health_check.enable }}
publish_dispatcher::scheduled_jobs::weekday::content_health_check: "{{ scheduled_jobs.publish_dispatcher.content_health_check.weekday }}"
publish_dispatcher::scheduled_jobs::hour::content_health_check: "{{ scheduled_jobs.publish_dispatcher.content_health_check.hour }}"
publish_dispatcher::scheduled_jobs::minute::content_health_check: "{{ scheduled_jobs.publish_dispatcher.content_health_check.minute }}"

publish::enable_deploy_on_init: {{ aem.enable_deploy_on_init }}
publish::revert_snapshot_type: {{ aem.revert_snapshot_type }}
publish::snapshot_attach_timeout: {{ aem.snapshot_attach_timeout }}

author_dispatcher::enable_deploy_on_init: {{ aem.enable_deploy_on_init }}

publish_dispatcher::enable_deploy_on_init: {{ aem.enable_deploy_on_init }}
publish_dispatcher::enable_content_healthcheck: {{ aem.enable_content_healthcheck }}

orchestrator::aem_orchestrator_version: '{{ library.aem_orchestrator_version }}'
orchestrator::stack_manager_stack_name: '{{ scheduled_jobs.aem_orchestrator.stack_manager_pair.stack_prefix }}-{{ scheduled_jobs.aem_orchestrator.stack_manager_pair.stack_name }}'

# Configure Chaos Monkey
chaos_monkey::simian_army_version: '{{ library.simian_army_version }}'

chaos_monkey::asg_probability: '{{ chaos_monkey.termination_settings.asg_probability }}'
chaos_monkey::asg_max_terminations_per_day: '{{ chaos_monkey.termination_settings.asg_max_terminations_per_day }}'

chaos_monkey::orchestrator_enable_random_termination: {{ orchestrator.enable_random_termination }}
chaos_monkey::chaos_monkey_enable_random_termination: {{ chaos_monkey.enable_random_termination }}
chaos_monkey::publish_enable_random_termination: {{ publish.enable_random_termination }}
chaos_monkey::publish_dispatcher_enable_random_termination: {{ publish_dispatcher.enable_random_termination }}
chaos_monkey::author_dispatcher_enable_random_termination: {{ author_dispatcher.enable_random_termination }}
chaos_monkey::include_stack: {{ chaos_monkey.include_stack }}

simianarmy::simianarmy_properties::simianarmy_calendar_open_hour: '{{ chaos_monkey.termination_settings.calendar_open_hour }}'
simianarmy::simianarmy_properties::simianarmy_calendar_close_hour: '{{ chaos_monkey.termination_settings.calendar_close_hour }}'
simianarmy::simianarmy_properties::simianarmy_calendar_timezone: '{{ chaos_monkey.termination_settings.calendar_timezone }}'
simianarmy::simianarmy_properties::simianarmy_scheduler_frequency_in_minutes: '{{ chaos_monkey.termination_settings.scheduler_frequency_in_minutes }}'
simianarmy::chaos_properties::simianarmy_chaos_asg_probability: '{{ chaos_monkey.termination_settings.asg_probability }}'
simianarmy::chaos_properties::simianarmy_chaos_asg_max_terminations_per_day: '{{ chaos_monkey.termination_settings.asg_max_terminations_per_day }}'

# AWS Region parameter
common::aws_region: {{ aws.region }}

common::proxy_enabled: {{ proxy.enabled }}
common::proxy_protocol: '{{ proxy.protocol }}'
common::proxy_host: '{{ proxy.host }}'
common::proxy_port: '{{ proxy.port }}'
common::proxy_user: '{{ proxy.user }}'
common::proxy_password: '{{ proxy.password }}'
common::proxy_noproxy:
{{ proxy.noproxy | to_nice_yaml | indent(width=2, first=True) }}

aem_curator::config_author_primary::aem_password_reset_version: '{{ library.aem_password_reset_version }}'
aem_curator::config_author_primary::enable_crxde: {{ aem.enable_crxde }}
aem_curator::config_author_primary::enable_default_passwords: {{ aem.enable_default_passwords }}
aem_curator::config_author_primary::jvm_mem_opts: {{ aem.author.jvm_mem_opts }}
aem_curator::config_author_primary::jmxremote_port: {{ aem.author.jmxremote.port }}
aem_curator::config_author_primary::jvm_opts: {{ aem.author.jvm_opts }}
aem_curator::config_author_primary::author_timeout: {{ aem.client_timeout }}

aem_curator::config_author_standby::jvm_mem_opts: {{ aem.author.jvm_mem_opts }}
aem_curator::config_author_standby::jmxremote_port: {{ aem.author.jmxremote.port }}
aem_curator::config_author_standby::jvm_opts: {{ aem.author.jvm_opts }}

aem_curator::config_publish::aem_password_reset_version: {{ library.aem_password_reset_version }}
aem_curator::config_publish::enable_crxde: {{ aem.enable_crxde }}
aem_curator::config_publish::enable_default_passwords: {{ aem.enable_default_passwords }}
aem_curator::config_publish::jvm_mem_opts: {{ aem.publish.jvm_mem_opts }}
aem_curator::config_publish::jmxremote_port: {{ aem.publish.jmxremote.port }}
aem_curator::config_publish::jvm_opts: {{ aem.publish.jvm_opts }}
aem_curator::config_publish::publish_timeout: {{ aem.client_timeout }}

aem_curator::config_aem_tools::oak_run_version: '{{ library.oak_run_version }}'
aem_curator::config_aem_tools::enable_compaction_remove_bak_files: '{{ aem.enable_bak_files_cleanup }}'
aem_curator::config_aem_tools::compaction_remove_bak_files_older_than_in_days: '{{ aem.bak_files_cleanup_max_age_in_days }}'

# Enable configuration of AEM Upgrade tools
aem_curator::config_aem_upgrade_tools::enable_upgrade_tools: {{ aem.enable_upgrade_tools }}

aem_curator::config_author_primary::aem_version: '{{ aem.version }}'
aem_curator::config_author_standby::aem_version: '{{ aem.version }}'
aem_curator::action_promote_author_standby_to_primary::aem_version: '{{ aem.version }}'

aem_curator::config_collectd::proxy_protocol: '{{ proxy.protocol }}'
aem_curator::config_collectd::proxy_host: '{{ proxy.host }}'
aem_curator::config_collectd::proxy_port: '{{ proxy.port }}'
aem_curator::config_collectd::proxy_enabled: {{ proxy.enabled }}

aem_curator::action_deploy_artifacts::retries_max_tries: {{ aem.deployment_check_retries }}
aem_curator::action_deploy_artifacts::retries_base_sleep_seconds: {{ aem.deployment_check_delay_in_seconds }}
aem_curator::action_deploy_artifacts::retries_max_sleep_seconds: {{ aem.deployment_check_delay_in_seconds }}
aem_curator::action_deploy_artifacts::deployment_sleep_seconds: {{ aem.deployment_delay_in_seconds }}

aem_curator::action_deploy_artifact::retries_max_tries: {{ aem.deployment_check_retries }}
aem_curator::action_deploy_artifact::retries_base_sleep_seconds: {{ aem.deployment_check_delay_in_seconds }}
aem_curator::action_deploy_artifact::retries_max_sleep_seconds: {{ aem.deployment_check_delay_in_seconds }}

# AEM Reconfiguration Parameters
common::aem_healthcheck_version: {{ library.aem_healthcheck_version }}
common::enable_aem_reconfiguration: {{ aem.enable_reconfiguration }}
common::enable_truststore_removal: {{ reconfiguration.enable_truststore_removal }}
common::cert_base_url: {{ reconfiguration.certs_base }}
common::aem_ssl_keystore_password: {{ reconfiguration.ssl_keystore_password }}
common::enable_create_system_users: {{ reconfiguration.enable_create_system_users }}
common::aem_system_users:
{{ system_users | to_nice_yaml | indent(width=2, first=True) }}

# Logrotation configuration. For configuration parameters see https://github.com/voxpupuli/puppet-logrotate
common::logrotation::config:
{{ logrotation.config | to_nice_yaml | indent(width=2, first=True) }}
common::logrotation::config_default:
{{ logrotation.default_config | to_nice_yaml | indent(width=2, first=True) }}
common::logrotation::rules:
{{ logrotation.rules | to_nice_yaml | indent(width=2, first=True) }}
author_primary::logrotation:
{{ logrotation.author_primary | to_nice_yaml | indent(width=2, first=True) }}
author_standby::logrotation:
{{ logrotation.author_standby | to_nice_yaml | indent(width=2, first=True) }}
publish::logrotation:
{{ logrotation.publish | to_nice_yaml | indent(width=2, first=True) }}
author_dispatcher::logrotation:
{{ logrotation.author_dispatcher | to_nice_yaml | indent(width=2, first=True) }}
publish_dispatcher::logrotation:
{{ logrotation.publish_dispatcher | to_nice_yaml | indent(width=2, first=True) }}
aem_orchestrator::logrotation:
{{ logrotation.orchestrator | to_nice_yaml | indent(width=2, first=True) }}
simianarmy::logrotation:
{{ logrotation.simianarmy | to_nice_yaml | indent(width=2, first=True) }}

# Keystore parameters
common::authorizable_keystore::enable_creation: {{ aem.authorizable_keystore.enable_creation }}
common::authorizable_keystore::enable_certificate_chain_upload: {{ aem.authorizable_keystore.enable_certificate_chain_upload }}

# Truststore parameters
common::truststore::enable_creation: {{ aem.truststore.enable_creation }}
common::truststore::enable_migration: {{ reconfiguration.enable_truststore_migration }}
common::truststore::password: {{ aem.truststore.password }}

# SAML Configuration parameters
common::saml::enable: {{ aem.enable_saml }}
common::saml::enable_saml_certificate_upload: {{ aem.truststore.enable_saml_certificate_upload }}
common::saml::configuration:
{{ saml | to_nice_yaml | indent(width=2, first=True) }}

# AEM Orchestrator only takes snapshot from Publish instance in a Full-Set architecture, hence it only needs the data volume device name
aem_orchestrator::application_properties::aws_device_name: {{ ami_device[os_type].data_name }}

aem_orchestrator::application_properties::aem_reverse_replication_enable: '{{ aem.enable_reverse_replication }}'
aem_orchestrator::application_properties::alarm_content_health_check_terminate_instance_enable: '{{ aem.enable_content_healthcheck_terminate_instance }}'
aem_orchestrator::jarfile_checksum_value: 133ad0f9a6c083701b2531b677a4458ebe021af88b3ea0eba87374fb9b12dc94

# Configure Wait until login page is ready timeout for AEM Author & Publisher
common::login_ready_max_tries: '{{ aem.login_ready_max_tries }}'
common::login_ready_base_sleep_seconds: '{{ aem.login_ready_base_sleep_seconds }}'
common::login_ready_max_sleep_seconds: '{{ aem.login_ready_max_sleep_seconds }}'

# Configure Device names. device alias is used by snapshot_attach.py Depending on the block device driver of the kernel, the device could be attached with a different name than you specified.
common::ami::device_name: {{ ami_device[os_type].data_name }}
common::ami::device_alias: {{ ami_device[os_type].data_attached_name }}
common::ami::author_device_name: {{ ami_device[os_type].author_data_name }}
common::ami::author_device_alias: {{ ami_device[os_type].author_data_attached_name }}
common::ami::publish_device_name: {{ ami_device[os_type].publish_data_name }}
common::ami::publish_device_alias: {{ ami_device[os_type].publish_data_attached_name }}


# Service start Post sleep configuration
common::enable_post_start_sleep: {{ aem.enable_post_start_sleep }}
common::post_start_sleep_seconds: {{ aem.post_start_sleep_seconds }}

# ssh_public_keys Import
common::ssh_public_keys:
{{ ssh_public_keys | to_nice_yaml | indent(width=2, first=True) }}

# Enable Cloudwatch S3 stream to Lambda
orchestrator::enable_cloudwatch_s3_stream: {{ aws.cloudwatch.enable_log_subscription }}
action_scheduled_jobs::cloudwatch_log_subscription_arn: {{ aws.cloudwatch.log_subscription_arn }}
