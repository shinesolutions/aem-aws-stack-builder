AWSTemplateFormatVersion: '2010-09-09'
Description: Create the Compute resources for the AEM Orchestrator
Outputs:
  OrchestratorAutoScalingGroup:
    Description: The Orchestrator Auto Scaling Group
    Export:
      Name:
        Fn::Sub: ${MainStackPrefixParameter}-OrchestratorAutoScalingGroup
    Value:
      Ref: OrchestratorAutoScalingGroup
  OrchestratorLaunchConfiguration:
    Description: The Orchestrator Launch Configuration
    Value:
      Ref: OrchestratorLaunchConfiguration
Parameters:
  AEMASGEventQueueName:
    Default: ''
    Description: The name of the messaging stack.
    Type: String
  AemAwsStackProvisionerVersionParameter:
    Description: AEM AWS Stack Provisioner version number
    Type: String
  AuthorDispatcherStackArn:
    Default: ''
    Description: The ARN of the author-dispatcher stack.
    Type: String
  AuthorStackArn:
    Default: ''
    Description: The ARN of the author stack.
    Type: String
  ComputeKeyPairNameParameter:
    Description: The Compute Resources Key Pair Name
    Type: AWS::EC2::KeyPair::KeyName
  DataBucketNameParameter:
    Description: Bucket name that stores Stack data files
    Type: String
  MainStackPrefixParameter:
    Description: The AEM Stack Compute Resources Stack Prefix
    Type: String
  MessagingStackArn:
    Default: ''
    Description: The ARN of the messaging stack.
    Type: String
  NetworkStackPrefixParameter:
    Description: The AEM Stack Network Resources Stack Prefix
    Type: String
  OrchestratorASGAvailabilityZoneListParameter:
    Description: The Orchestrator Availability Zone List
    Type: List<AWS::EC2::AvailabilityZone::Name>
  OrchestratorDataVolSizeParameter:
    Description: Orchestrator Instances Data EBS Volume Size
    Type: Number
  OrchestratorEnableVolEncryptionParameter:
    AllowedValues:
    - true
    - false
    Description: Wether to enable or disable EBS volume encryption.
    Type: String
  OrchestratorImageParameter:
    Description: The Orchestrator Image Id
    Type: AWS::EC2::Image::Id
  OrchestratorImageRootDevice:
    Default: /dev/sda1
    Description: The root device name for the Orchestrator Image Id
    Type: String
  OrchestratorImageDataDevice:
    Default: /dev/sdb
    Description: The data device name for the Orchestrator Image Id
    Type: String
  OrchestratorInstanceTypeParameter:
    Description: The Orchestrator Instance Type
    Type: String
  OrchestratorRootVolSizeParameter:
    Description: Orchestrator Instances Root EBS Volume Size
    Type: Number
  PrerequisitesStackPrefixParameter:
    Description: The AEM Stack Prerequisite Resources Stack Prefix
    Type: String
  PublishDispatcherStackArn:
    Default: ''
    Description: The ARN of the publish-dispatcher stack.
    Type: String
  PublishDispatcherStackName:
    Default: ''
    Description: The name of the publish-dispatcher stack.
    Type: String
  PublishStackArn:
    Default: ''
    Description: The ARN of the author stack.
    Type: String
  HttpProxyParameter:
    Description: http_proxy parameter
    Type: String
  HttpsProxyParameter:
    Description: https_proxy parameter
    Type: String
  NoProxyParameter:
    Description: no_proxy parameter
    Type: String
Resources:
  OrchestratorAutoScalingGroup:
    Properties:
      AvailabilityZones:
        Ref: OrchestratorASGAvailabilityZoneListParameter
      HealthCheckGracePeriod: 300
      HealthCheckType: EC2
      LaunchConfigurationName:
        Ref: OrchestratorLaunchConfiguration
      MaxSize: 1
      MetricsCollection:
      - Granularity: 1Minute
        Metrics:
        - GroupMinSize
        - GroupMaxSize
        - GroupDesiredCapacity
        - GroupInServiceInstances
        - GroupPendingInstances
        - GroupStandbyInstances
        - GroupTerminatingInstances
        - GroupTotalInstances
      MinSize: 1
      Tags:
      - Key: Name
        PropagateAtLaunch: true
        Value: AEM Orchestrator
      - Key: StackPrefix
        PropagateAtLaunch: true
        Value:
          Ref: MainStackPrefixParameter
      - Key: Component
        PropagateAtLaunch: true
        Value: orchestrator
      VPCZoneIdentifier:
        Fn::Split:
        - ','
        - Fn::ImportValue:
            Fn::Sub: ${NetworkStackPrefixParameter}-OrchestratorSubnetList
    Type: AWS::AutoScaling::AutoScalingGroup
  OrchestratorLaunchConfiguration:
    Properties:
      AssociatePublicIpAddress: false
      BlockDeviceMappings:
      - DeviceName:
          Ref: OrchestratorImageRootDevice
        Ebs:
          DeleteOnTermination: true
          Encrypted:
            Ref: OrchestratorEnableVolEncryptionParameter
          VolumeSize:
            Ref: OrchestratorRootVolSizeParameter
          VolumeType: gp2
      - DeviceName:
          Ref: OrchestratorImageDataDevice
        Ebs:
          DeleteOnTermination: true
          Encrypted:
            Ref: OrchestratorEnableVolEncryptionParameter
          VolumeSize:
            Ref: OrchestratorDataVolSizeParameter
          VolumeType: gp2
      IamInstanceProfile:
        Fn::ImportValue:
          Fn::Sub: ${PrerequisitesStackPrefixParameter}-OrchestratorInstanceProfile
      ImageId:
        Ref: OrchestratorImageParameter
      InstanceMonitoring: false
      InstanceType:
        Ref: OrchestratorInstanceTypeParameter
      KeyName:
        Ref: ComputeKeyPairNameParameter
      SecurityGroups:
      - Fn::ImportValue:
          Fn::Sub: ${PrerequisitesStackPrefixParameter}-OrchestratorSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Sub: "#!/bin/bash -x\nexport AWS_DEFAULT_REGION=${AWS::Region}\nexport no_proxy=${NoProxyParameter}\nexport http_proxy=${HttpProxyParameter}\nexport https_proxy=${HttpsProxyParameter}\n\
            \ source /etc/profile\n mkdir -p /opt/shinesolutions/aem-aws-stack-builder/\n\
            \ # Configure other stack names in Orchestrator's stack provisioner's\
            \ local.yaml\n echo '\n aem_orchestrator::application_properties::aws_cloudformation_stack_name_author:\
            \ \"${AuthorStackArn}\"\n aem_orchestrator::application_properties::aws_cloudformation_stack_name_author_dispatcher:\
            \ \"${AuthorDispatcherStackArn}\"\n aem_orchestrator::application_properties::aws_cloudformation_stack_name_publish:\
            \ \"${PublishStackArn}\"\n aem_orchestrator::application_properties::aws_cloudformation_stack_name_publish_dispatcher:\
            \ \"${PublishDispatcherStackName}\"\n aem_orchestrator::application_properties::aws_cloudformation_stack_name_messaging:\
            \ \"${MessagingStackArn}\"\n aem_orchestrator::application_properties::aws_sqs_queue_name:\
            \ \"${AEMASGEventQueueName}\"\n ' > /opt/shinesolutions/aem-aws-stack-builder/extra_local.yaml\n\
            \ until [[ $(aws s3 ls s3://${DataBucketNameParameter}/${MainStackPrefixParameter}/stack-init.sh) ]]; do echo \"Waiting for EC2 initilsation to finish.\";done\n\
            \ aws s3 cp s3://${DataBucketNameParameter}/${MainStackPrefixParameter}/stack-init.sh\
            \ /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\n chmod 755\
            \ /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\n /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\
            \ ${DataBucketNameParameter} ${MainStackPrefixParameter} orchestrator\
            \ ${AemAwsStackProvisionerVersionParameter} /opt/shinesolutions/aem-aws-stack-builder/extra_local.yaml\n"
    Type: AWS::AutoScaling::LaunchConfiguration
  CriticalOrchestratorNoInstanceAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Fn::ImportValue:
          Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      AlarmDescription: No Orchestrator Instance in Service
      AlarmName:
        Fn::Sub: ${MainStackPrefixParameter}-Critical-Orchestrator-NoInstanceAlarm
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: OrchestratorAutoScalingGroup
      EvaluationPeriods: 5
      MetricName: GroupInServiceInstances
      Namespace: AWS/AutoScaling
      OKActions:
      - Fn::ImportValue:
          Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      Period: 60
      Statistic: Average
      Threshold: 1
    Type: AWS::CloudWatch::Alarm

  WarningOrchestratorMemoryHighAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-WarningAlarmNotificationTopic
      AlarmDescription: Memory Utilization is high
      AlarmName:
        Fn::Sub:
          - "${MainStackPrefixParameter}-Warning-Orchestrator-MemoryHighAlarm"
          - MainStackPrefixParameter:
              Ref: 'MainStackPrefixParameter'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value:
            Ref: OrchestratorAutoScalingGroup
      EvaluationPeriods: 1
      MetricName: MemoryUtilization
      Namespace: "System/Linux"
      OKActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-WarningAlarmNotificationTopic
      Period: 300
      Statistic: Average
      Threshold: 80
    Type: AWS::CloudWatch::Alarm
  CriticalOrchestratorMemoryHighAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      AlarmDescription: Memory Utilization is high
      AlarmName:
        Fn::Sub:
          - "${MainStackPrefixParameter}-Critical-Orchestrator-MemoryHighAlarm"
          - MainStackPrefixParameter:
              Ref: 'MainStackPrefixParameter'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value:
            Ref: OrchestratorAutoScalingGroup
      EvaluationPeriods: 1
      MetricName: MemoryUtilization
      Namespace: "System/Linux"
      OKActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      Period: 300
      Statistic: Average
      Threshold: 90
    Type: AWS::CloudWatch::Alarm
  WarningOrchestratorRootDiskSpaceUtilizationAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-WarningAlarmNotificationTopic
      AlarmDescription: Disk Space Utilization is high
      AlarmName:
        Fn::Sub:
          - "${MainStackPrefixParameter}-Warning-Orchestrator-RootDiskSpaceHighAlarm"
          - MainStackPrefixParameter:
              Ref: 'MainStackPrefixParameter'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value:
            Ref: OrchestratorAutoScalingGroup
        - Name: MountPath
          Value: "/"
        - Name: Filesystem
          Value: "/"
      EvaluationPeriods: 1
      MetricName: DiskSpaceUtilization
      Namespace: "System/Linux"
      OKActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-WarningAlarmNotificationTopic
      Period: 300
      Statistic: Average
      Threshold: 80
    Type: AWS::CloudWatch::Alarm
  CriticalOrchestratorRootDiskSpaceUtilizationAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      AlarmDescription: Disk Space Utilization is high
      AlarmName:
        Fn::Sub:
          - "${MainStackPrefixParameter}-Critical-Orchestrator-RootDiskSpaceHighAlarm"
          - MainStackPrefixParameter:
              Ref: 'MainStackPrefixParameter'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value:
            Ref: OrchestratorAutoScalingGroup
        - Name: MountPath
          Value: "/"
        - Name: Filesystem
          Value: "/"
      EvaluationPeriods: 1
      MetricName: DiskSpaceUtilization
      Namespace: "System/Linux"
      OKActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      Period: 300
      Statistic: Average
      Threshold: 90
    Type: AWS::CloudWatch::Alarm
  WarningOrchestratorCPUUtilizationAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-WarningAlarmNotificationTopic
      AlarmDescription: CPU Utilization is high
      AlarmName:
        Fn::Sub:
          - "${MainStackPrefixParameter}-Warning-Orchestrator-CPUHighAlarm"
          - MainStackPrefixParameter:
              Ref: 'MainStackPrefixParameter'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value:
            Ref: OrchestratorAutoScalingGroup
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: "AWS/EC2"
      OKActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-WarningAlarmNotificationTopic
      Period: 300
      Statistic: Maximum
      Threshold: 60
    Type: AWS::CloudWatch::Alarm
  CriticalOrchestratorCPUUtilizationAlarm:
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      AlarmDescription: CPU Utilization is high
      AlarmName:
        Fn::Sub:
          - "${MainStackPrefixParameter}-Critical-Orchestrator-CPUHighAlarm"
          - MainStackPrefixParameter:
              Ref: 'MainStackPrefixParameter'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value:
            Ref: OrchestratorAutoScalingGroup
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: "AWS/EC2"
      OKActions:
        - Fn::ImportValue:
            Fn::Sub: ${PrerequisitesStackPrefixParameter}-CriticalAlarmNotificationTopic
      Period: 300
      Statistic: Maximum
      Threshold: 90
    Type: AWS::CloudWatch::Alarm
