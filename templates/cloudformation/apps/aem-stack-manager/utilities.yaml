---

AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Lambda Functions for utility tasks with Default Schedule Using AWS
  Events
Outputs:
  PurgeSnapshotDevAliasArn:
    Description: Arn for Prod Alias of Snapshot Purge Function
    Value:
      Ref: LambdaProdAlias
  PurgeSnapshotFunctionName:
    Description: Lambda Function Name for Snapshot Purge Function
    Value:
      Ref: SnapshotsPurgeLambdaFunction
  PurgeSnapshotProdAliasArn:
    Description: Arn for Prod Alias of Snapshot Purge Function
    Value:
      Ref: LambdaProdAlias
  CloudWatchS3StreamDevAliasArn:
    Description: Arn for Prod Alias of Cloudwatch S3 stream Function
    Value:
      Ref: CloudWatchS3StreamLambdaProdAlias
  CloudWatchS3StreamFunctionName:
    Description: Lambda Function Name for Cloudwatch S3 stream Function
    Value:
      Ref: CloudWatchS3StreamLambdaFunction
  CloudWatchS3StreamProdAliasArn:
    Description: Arn for Prod Alias of Cloudwatch S3 stream Function
    Value:
      Ref: CloudWatchS3StreamLambdaProdAlias
Parameters:
  AWSRegion:
    Description: Name of the AWS region
    Type: String
  DataBucketNameParameter:
    Description: Bucket Name that Stores Files Used by the Function
    Type: String
  LiveSnapshotsPurgeMaxAge:
    Description: Parameters for Purging Live Snapshot in JSON Formatted String
    Type: String
  LiveSnapshotsPurgeSchedule:
    Description: CloudWatch Event Rule Schedule to Purge Old Live Snapshots
    Type: String
  MainStackPrefixParameter:
    Description: The AEM Stack Main Resources Stack Prefix
    Type: String
  OfflineSnapshotsPurgeMaxAge:
    Description: Parameters for Purging Offline Snapshot in JSON Formatted String
    Type: String
  OfflineSnapshotsPurgeSchedule:
    Description: CloudWatch Event Rule Schedule to Purge Old Offline Snapshots
    Type: String
  OrchestrationSnapshotsPurgeMaxAge:
    Description: Parameters for Purging Orchestration Snapshot in JSON Formatted String
    Type: String
  OrchestrationSnapshotsPurgeSchedule:
    Description: CloudWatch Event Rule Schedule to Purge Old Orchestration Snapshots
    Type: String
  S3DataStackManagerPrefix:
    Description: Prefix within the Bucket to Locate Files
    Type: String
Resources:
  CloudWatchS3StreamInitialVersion:
    DependsOn: CloudWatchS3StreamLambdaFunction
    Properties:
      Description: Initial Version to Start With
      FunctionName:
        Ref: CloudWatchS3StreamLambdaFunction
    Type: AWS::Lambda::Version
  CloudWatchS3StreamLambdaDevAlias:
    DependsOn: CloudWatchS3StreamLambdaFunction
    Properties:
      Description: Lambda Alias for Development Use
      FunctionName:
        Ref: CloudWatchS3StreamLambdaFunction
      FunctionVersion: $LATEST
      Name: dev
    Type: AWS::Lambda::Alias
  CloudWatchS3StreamLambdaProdAlias:
    DependsOn: CloudWatchS3StreamInitialVersion
    Properties:
      Description: Lambda Alias for Production Use
      FunctionName:
        Ref: CloudWatchS3StreamLambdaFunction
      FunctionVersion:
        Fn::GetAtt: CloudWatchS3StreamInitialVersion.Version
      Name: prod
    Type: AWS::Lambda::Alias
  CloudWatchS3StreamLambdaFunction:
    Properties:
      Code:
        S3Bucket:
          Ref: DataBucketNameParameter
        S3Key:
          Fn::Sub: ${S3DataStackManagerPrefix}/cloudwatch_logs_s3_stream.zip
      Description: Cloudwatch log s3 stream
      Environment:
        Variables:
          LOG_LEVEL: '20'
          S3_BUCKET:
            Ref: DataBucketNameParameter
          S3_PREFIX:
            Ref: S3DataStackManagerPrefix
      FunctionName:
        Fn::Sub: ${MainStackPrefixParameter}-CloudWatchS3Stream
      Handler: cloudwatch_logs_s3_stream.handler
      MemorySize: 128
      Role:
        Fn::ImportValue:
          Fn::Sub: ${MainStackPrefixParameter}-StackManagerLambdaServiceRoleArn
      Runtime: python3.7
      Timeout: 300
    Type: AWS::Lambda::Function
  CloudWatchS3StreamLambdaPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: CloudWatchS3StreamLambdaProdAlias
      Principal:
        Fn::Sub: logs.${AWSRegion}.amazonaws.com
    Type: AWS::Lambda::Permission
  AemSnapshotsPurgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Sub: "${MainStackPrefixParameter}-AemSnapshotsPurge-FAILS"
      AlarmDescription: "Notifies if AemSnapshotsPurge execution fails"
      AlarmActions:
        - Fn::ImportValue:
            Fn::Sub: ${MainStackPrefixParameter}-AlarmNotificationTopicArn
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      EvaluationPeriods: 1
      MetricName: "Errors"
      Namespace: "AWS/Lambda"
      Period: 300
      Statistic: "Sum"
      Threshold: 1.0
      TreatMissingData: "notBreaching"
      Dimensions:
        - Name: FunctionName
          Value:
            Fn::Sub: "${MainStackPrefixParameter}-AemSnapshotsPurge"
  InitialVersion:
    Properties:
      Description: Initial Version to Start With
      FunctionName:
        Ref: SnapshotsPurgeLambdaFunction
    Type: AWS::Lambda::Version
  LambdaDevAlias:
    Properties:
      Description: Lambda Alias for Development Use
      FunctionName:
        Ref: SnapshotsPurgeLambdaFunction
      FunctionVersion: $LATEST
      Name: dev
    Type: AWS::Lambda::Alias
  LambdaProdAlias:
    Properties:
      Description: Lambda Alias for Production Use
      FunctionName:
        Ref: SnapshotsPurgeLambdaFunction
      FunctionVersion:
        Fn::GetAtt: InitialVersion.Version
      Name: prod
    Type: AWS::Lambda::Alias
  LiveSnapshotLambdaPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: LambdaProdAlias
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: LiveSnapshotsPurgeRule.Arn
    Type: AWS::Lambda::Permission
  LiveSnapshotsPurgeRule:
    Properties:
      Description: Delete AEM Live Snapshots Regularly
      Name:
        Fn::Sub: ${MainStackPrefixParameter}-LiveSnapshotsPurge
      ScheduleExpression:
        Fn::Sub: 'cron(${LiveSnapshotsPurgeSchedule})'
      State: ENABLED
      Targets:
        - Arn:
            Ref: LambdaProdAlias
          Id: LiveSnapshotsPurgeRule
          Input:
            Fn::Sub: '{"SnapshotType": "live", "Age": "${LiveSnapshotsPurgeMaxAge}h"}'
    Type: AWS::Events::Rule
  OfflineSnapshotLambdaPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: LambdaProdAlias
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: OfflineSnapshotsPurgeRule.Arn
    Type: AWS::Lambda::Permission
  OfflineSnapshotsPurgeRule:
    Properties:
      Description: Delete AEM Offline Snapshots Regularly
      Name:
        Fn::Sub: ${MainStackPrefixParameter}-OfflineSnapshotsPurge
      ScheduleExpression:
        Fn::Sub: 'cron(${OfflineSnapshotsPurgeSchedule})'
      State: ENABLED
      Targets:
        - Arn:
            Ref: LambdaProdAlias
          Id: OfflineSnapshotsPurgeRule
          Input:
            Fn::Sub: '{"SnapshotType": "offline", "Age": "${OfflineSnapshotsPurgeMaxAge}h"}'
    Type: AWS::Events::Rule
  OrchestrationSnapshotLambdaPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: LambdaProdAlias
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: OrchestrationSnapshotsPurgeRule.Arn
    Type: AWS::Lambda::Permission
  OrchestrationSnapshotsPurgeRule:
    Properties:
      Description: Delete AEM Orchestration Snapshot Regularly
      Name:
        Fn::Sub: ${MainStackPrefixParameter}-OrchestrationSnapshotsPurge
      ScheduleExpression:
        Fn::Sub: 'cron(${OrchestrationSnapshotsPurgeSchedule})'
      State: ENABLED
      Targets:
        - Arn:
            Ref: LambdaProdAlias
          Id: OrchestrationSnapshotsPurgeRule
          Input:
            Fn::Sub: '{"SnapshotType": "orchestration", "Age": "${OrchestrationSnapshotsPurgeMaxAge}h"}'
    Type: AWS::Events::Rule
  SnapshotsPurgeLambdaFunction:
    Properties:
      Code:
        S3Bucket:
          Ref: DataBucketNameParameter
        S3Key:
          Fn::Sub: ${S3DataStackManagerPrefix}/purge_snapshots.zip
      Description: Function to Purge AEM Old Snapshots
      FunctionName:
        Fn::Sub: ${MainStackPrefixParameter}-AemSnapshotsPurge
      Handler: purge_snapshots.handler
      MemorySize: 128
      Role:
        Fn::ImportValue:
          Fn::Sub: ${MainStackPrefixParameter}-StackManagerLambdaServiceRoleArn
      Runtime: python2.7
      Timeout: 300
    Type: AWS::Lambda::Function
