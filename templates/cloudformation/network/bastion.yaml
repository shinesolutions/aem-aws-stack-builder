---

AWSTemplateFormatVersion: '2010-09-09'
Description: Create a Bastion Host inside AEM VPC
Parameters:
  BastionImageId:
    Description: AMI Id used for Bastion Host
    Type: AWS::EC2::Image::Id
  BastionKeyPairName:
    Description: Key Pair Name for the Bastion Host
    Type: AWS::EC2::KeyPair::KeyName
  BastionSecurityGroups:
    Description: The Set of Security Groups Attached to the Bastion Host
    Type: List<AWS::EC2::SecurityGroup::Id>
  BastionSubnet:
    Description: Subnet Ids the Bastion Host Will be Launched into
    Type: AWS::EC2::Subnet::Id
  StackPrefix:
    Default: ''
    Description: Used to Namespace the Exported Resources
    Type: String
  NetworkStackPrefixParameter:
    Description: The AEM Stack Network Resources Stack Prefix
    Type: String
  PrerequisitesStackPrefixParameter:
    Description: The AEM Stack Prerequisite Resources Stack Prefix
    Type: String
Resources:
  Bastion:
    Properties:
      ImageId:
        Ref: BastionImageId
      InstanceType: t2.small
      KeyName:
        Ref: BastionKeyPairName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          GroupSet:
            Ref: BastionSecurityGroups
          SubnetId:
            Ref: BastionSubnet
      Tags:
        - Key: Name
          Value: AEM OpenCloud Bastion
    Type: AWS::EC2::Instance
  BastionHostSecurityGroup:
    Properties:
      GroupDescription: Bastion Host Security Group
      Tags:
        - Key: Name
          Value: Bastion Host Security Group
        - Key: StackPrefix
          Value:
            Ref: PrerequisitesStackPrefixParameter
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${NetworkStackPrefixParameter}-VPCId
    Type: AWS::EC2::SecurityGroup
  BastionHostSecurityGroupEgress0:
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '80'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '80'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress1:
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '5432'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '5433'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress2:
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '22'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '22'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress3:
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '4502'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '4503'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress4:
    Properties:
      CidrIpv6: '::/0'
      FromPort: '80'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '80'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress5:
    Properties:
      CidrIpv6: '::/0'
      FromPort: '5432'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '5433'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress6:
    Properties:
      CidrIpv6: '::/0'
      FromPort: '22'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '22'
    Type: AWS::EC2::SecurityGroupEgress
  BastionHostSecurityGroupEgress7:
    Properties:
      CidrIpv6: '::/0'
      FromPort: '4502'
      GroupId:
        Ref: BastionHostSecurityGroup
      IpProtocol: tcp
      ToPort: '4503'
    Type: AWS::EC2::SecurityGroupEgress
